Assignment 3 readme File

------------------------------------------------------------------------
What is your name?

Andy Yick Ho Lau

------------------------------------------------------------------------
What authorized sources of information did you use to complete the
assignment? COPY THE LIST of authorized sources of information given
in the "Policies" web page (also available on armlab in the file
~cos217/AuthorizedSourcesList ) to this section of the readme file,
and edit it as appropriate.

COS 217 lecture materials.
COS 217 precept materials.
COS 217 website.
The man pages on the armlab cluster.
COS 217 staff and/or current students on Ed.

------------------------------------------------------------------------
What unauthorized sources of information did you use to complete the
assignment? List any unauthorized sources of information that you used
to complete the assignment, and describe how you used them. The course
"Policies" web page defines unauthorized sources of information, and
any source that you have used but not listed in the authorized sources
should be included here. Please note that using an unauthorized source
may trigger a course penalty, and depending on the nature of the
interaction, may additionally require the interaction being reported
to the Committee on Discipline. Write "None" if you used no
unauthorized sources of information.

None

------------------------------------------------------------------------
In fulfillment of the requirement from section 2.4.3 of the Academic
Regulations in Princeton's Rights, Rules, Responsibilities guide,
enter your name in the space below the following affirmation:

This paper represents my own work in accordance with University
regulations.

Andy Yick Ho Lau


------------------------------------------------------------------------
In fulfillment of the requirement from section 2.4.6 of the Academic
Regulations in Princeton's Rights, Rules, Responsibilities guide,
and the COS 217 Generative AI policy, disclose and describe how you
used AI in completing this assignment:

I did not use AI to complete this assignment.



------------------------------------------------------------------------
What is your assessment of the assignment? Was it helpful? Was it fun?

I felt that this assignment was pretty useful, as I had the opportunity 
to build the linked-list and hash-table implemnetations of the symbol
table starting from the basics, which I found to be pretty fun.

------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?

N/A


------------------------------------------------------------------------
What warnings does splint generate on symtablelist.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None.


------------------------------------------------------------------------
What warnings does critTer generate on symtablelist.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

symtablelist.c: line 96: medium priority:
Do you want to validate 'pvValue' through an assert?

In my code, I did not validate pvValue through an assert since there 
wasn't any need to do so. Also, it's possible for pvValue to be NULL, 
as it's possible for a binding to not have an associated value. 
Furthemore, when I added assert(pvVALUE != NULL) to my code, the 
program aborted during execution, but when I ran the program after
the assert statement, I passed all the test cases. 

symtablelist.c: line 152: medium priority:
Do you want to validate 'pvValue' through an assert?

In my code, I did not validate pvValue through an assert since there 
wasn't any need to do so. Also, it's possible for pvValue to be NULL, 
as it's possible for a binding to not have an associated value. 
Furthemore, when I added assert(pvVALUE != NULL) to my code, the 
program aborted during execution, but when I ran the program after
the assert statement, I passed all the test cases. 

symtablelist.c: line 296: medium priority:
Do you want to validate 'pvExtra' through an assert?

Note that function pointers have to handle both cases of needing an
extra argument and needing no extra argument. This means it's possible
for pvExtra to be NULL since it's essentially used as a placeholder
whenever it's not needed.

------------------------------------------------------------------------
What warnings does splint generate on symtablehash.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None.



------------------------------------------------------------------------
What warnings does critTer generate on symtablehash.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

Note that my disagreements for each warning for symtablehash.c
are the same as my disagreements for symtablelist.c.

symtablehash.c: line 137: medium priority:
Do you want to validate 'pvValue' through an assert?

In my code, I did not validate pvValue through an assert since there 
wasn't any need to do so. Also, it's possible for pvValue to be NULL, 
as it's possible for a binding to not have an associated value. 
Furthemore, when I added assert(pvVALUE != NULL) to my code, the 
program aborted during execution, but when I ran the program after
the assert statement, I passed all the test cases. 

symtablehash.c: line 248: medium priority:
Do you want to validate 'pvValue' through an assert?

In my code, I did not validate pvValue through an assert since there 
wasn't any need to do so. Also, it's possible for pvValue to be NULL, 
as it's possible for a binding to not have an associated value. 
Furthemore, when I added assert(pvVALUE != NULL) to my code, the 
program aborted during execution, but when I ran the program after
the assert statement, I passed all the test cases. 

symtablehash.c: line 379: medium priority:
Do you want to validate 'pvExtra' through an assert?

Note that function pointers have to handle both cases of needing an
extra argument and needing no extra argument. This means it's possible
for pvExtra to be NULL since it's essentially used as a placeholder
whenever it's not needed.


------------------------------------------------------------------------
What are the CPU times reported by testsymtable.c with binding counts
50, 500, 5000, 50000, and 500000 using (1) your linked list
implementation, (2) your non-expanding hash table implementation, and
(3) your expanding hash table implementation? Fill in the blanks.

The linked list implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.000997 seconds.
-- 5000 bindings consumed 0.116552 seconds.
-- 50000 bindings consumed 19.257616 seconds.
-- 500000 bindings consumed more than 5 minutes.

The non-expanding hash table implementation with:
-- 50 bindings consumed ________ seconds.
-- 500 bindings consumed ________ seconds.
-- 5000 bindings consumed ________ seconds.
-- 50000 bindings consumed ________ seconds.
-- 500000 bindings consumed ________ seconds.

The expanding hash table implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.000000 seconds.
-- 5000 bindings consumed 0.000000 seconds.
-- 50000 bindings consumed 0.030001 seconds.
-- 500000 bindings consumed 0.459221 seconds.
